package problems.p0012;

import java.util.ArrayList;
import java.util.List;

/*
 * The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:
 * 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
 * Let us list the factors of the first seven triangle numbers:
 *   1: 1
 *   3: 1,3
 *   6: 1,2,3,6
 *  10: 1,2,5,10
 *  15: 1,3,5,15
 *  21: 1,3,7,21
 *  28: 1,2,4,7,14,28
 * We can see that 28 is the first triangle number to have over five divisors.
 * What is the value of the first triangle number to have over five hundred divisors?
 */

public class HighlyDivisibleTriangularNumber {
	
	private static final int DIVISORS = 500;
	
	public static void main(String[] args) {
		int result = -1;
		int i = 1;
		while (true)	{
			result = HighlyDivisibleTriangularNumber.getTriangularNumber(i);
			if (HighlyDivisibleTriangularNumber.getDivisors(result).size() > DIVISORS)	{
				break;
			}
			i++;
		}
		System.out.println(result);
	}
	
	private static int getTriangularNumber(int i)	{
		int result = 0;
		for (int n = 1; n <= i; n++)	{
			result += n;
		}
		return result;
	}
	
	private static List<Integer> getDivisors(int n)	{
		List<Integer> divisors = new ArrayList<Integer>();
		divisors.add(n);
		divisors.add(1);
		for (int i = n/2; i > 1; i--)	{
			if (n%i == 0)	{
				divisors.add(i);
			}
		}
		return divisors;
	}
	
	
}
